name: Erlang

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

jobs:
  build:
    name: Test on OTP ${{ matrix.otp_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        otp_version: ['24', '23', '22', '21']
        os: [ubuntu-latest]
    env:
      OTP_VERSION: ${{ matrix.otp_version }}
    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp_version }}
        rebar3-version: '3.18.0'
    - uses: actions/cache@v2
      name: Cache
      with:
        path: |
          _build
        key: ${{ runner.os }}-build-${{ matrix.otp_version }}-${{ hashFiles(format('rebar.lock')) }}
        restore-keys: |
          ${{ runner.os }}-build-${{ matrix.otp_version }}-
    - name: Compile
      run: rebar3 compile
    - name: EUnit tests
      run: rebar3 eunit --cover
    - name: Common Test tests
      run: rebar3 ct --cover
    - name: XRef
      run: rebar3 xref
    - name: Check formatting
      run: rebar3 fmt --check
    - name: Covertool
      if: ${{ always() }}
      run: rebar3 covertool generate
    - uses: codecov/codecov-action@v1
      if: ${{ always() }}
      with:
        file: _build/test/covertool/enough.covertool.xml
        env_vars: OTP_VERSION
  dialyzer:
    name: Dialyze on OTP ${{ matrix.otp_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        otp_version: ['24', '23', '22', '21']
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp_version }}
        rebar3-version: '3.18.0'
    - uses: actions/cache@v2
      name: Cache
      with:
        path: |
          _build
        key: ${{ runner.os }}-build-${{ matrix.otp_version }}-${{ hashFiles('rebar.lock') }}
        restore-keys: |
          ${{ runner.os }}-dialyzer-${{ matrix.otp_version }}-
    - name: Compile
      run: rebar3 compile
    - name: Dialyzer
      run: rebar3 dialyzer
